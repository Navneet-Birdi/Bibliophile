{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nbird\\\\Desktop\\\\bootcamp\\\\assignments\\\\project3\\\\bibliophile\\\\client\\\\src\\\\context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from 'react';\nimport { useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://openlibrary.org/search.json?title=\";\nconst AppContext = /*#__PURE__*/React.createContext();\nconst AppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState(\"Search...\");\n  const [books, setBooks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [resultTitle, setResultTitle] = useState(\"\");\n  const fetchBooks = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(`${URL}${searchTerm}`);\n      const data = await response.json();\n      console.log(data);\n      const {\n        docs\n      } = data;\n      console.log(docs);\n      if (docs) {\n        const newBooks = docs.slice(0, 20).map(bookSingle => {\n          const {\n            key,\n            author_name,\n            cover_i,\n            edition_count,\n            first_publish_year,\n            title\n          } = bookSingle;\n          return {\n            id: key,\n            author: author_name,\n            cover_id: cover_i,\n            edition_count: edition_count,\n            first_publish_year: first_publish_year,\n            title: title\n          };\n        });\n        setBooks(newBooks);\n        if (newBooks.length > 1) {\n          setResultTitle(\"Your Search Result\");\n        } else {\n          setResultTitle(\"No Search Result Found!!\");\n        }\n      } else {\n        setBooks([]);\n        setResultTitle(\"No Search Result Found!!\");\n      }\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  }, [searchTerm]);\n  useEffect(() => {\n    fetchBooks();\n  }, [searchTerm, fetchBooks]);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      loading,\n      books,\n      setSearchTerm,\n      resultTitle,\n      setResultTitle\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AppProvider, \"goE3UA+eJKerWDMBm7JJcYSGciU=\");\n_c = AppProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useCallback","URL","AppContext","createContext","AppProvider","children","searchTerm","setSearchTerm","books","setBooks","loading","setLoading","resultTitle","setResultTitle","fetchBooks","response","fetch","data","json","console","log","docs","newBooks","slice","map","bookSingle","key","author_name","cover_i","edition_count","first_publish_year","title","id","author","cover_id","length","error","useGlobalContext"],"sources":["C:/Users/nbird/Desktop/bootcamp/assignments/project3/bibliophile/client/src/context.js"],"sourcesContent":["import React, {useState, useContext, useEffect} from 'react';\nimport { useCallback } from 'react';\nconst URL = \"http://openlibrary.org/search.json?title=\";\nconst AppContext = React.createContext();\n\nconst AppProvider = ({children}) => {\n    const [searchTerm, setSearchTerm] = useState(\"Search...\");\n    const [books, setBooks] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [resultTitle, setResultTitle] = useState(\"\");\n    const fetchBooks = useCallback(async() => {\n            setLoading(true);\n            try{\n                const response = await fetch(`${URL}${searchTerm}`);\n                const data = await response.json();\n                console.log(data);\n                const {docs} = data;\n                console.log(docs);\n                if (docs){\n                    const newBooks = docs.slice(0,20).map(\n                        (bookSingle) => {\n                            const {key, author_name, cover_i, edition_count, first_publish_year, title} = bookSingle;\n                            return{\n                                id:key,\n                                author:author_name,\n                                cover_id:cover_i,\n                                edition_count:edition_count,\n                                first_publish_year:first_publish_year,\n                                title:title\n                            }\n                        }\n                    );\n\n                    setBooks(newBooks);\n                    if(newBooks.length > 1){\n                        setResultTitle(\"Your Search Result\");\n                    }\n                    else{\n                        setResultTitle(\"No Search Result Found!!\")\n                    }\n                }else{\n                    setBooks([]);\n                    setResultTitle(\"No Search Result Found!!\");\n                }\n                setLoading(false);\n\n            } catch(error){\n                console.log(error);\n                setLoading(false);\n            }\n    }, [searchTerm]);\n    useEffect(\n        () => {\n            fetchBooks();\n        }, [searchTerm, fetchBooks]\n    );\n\n    return(\n        <AppContext.Provider value = {{\n            loading, books, setSearchTerm, resultTitle, setResultTitle,\n        }}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\nexport const useGlobalContext = () => {\n    return useContext(AppContext);\n}\n\nexport {AppContext, AppProvider};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAO,OAAO;AAC5D,SAASC,WAAW,QAAQ,OAAO;AAAC;AACpC,MAAMC,GAAG,GAAG,2CAA2C;AACvD,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAa,EAAE;AAExC,MAAMC,WAAW,GAAG,QAAgB;EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC;EAC3B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,WAAW,CAAC;EACzD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMiB,UAAU,GAAGd,WAAW,CAAC,YAAW;IAClCW,UAAU,CAAC,IAAI,CAAC;IAChB,IAAG;MACC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEf,GAAI,GAAEK,UAAW,EAAC,CAAC;MACnD,MAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjB,MAAM;QAACI;MAAI,CAAC,GAAGJ,IAAI;MACnBE,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;MACjB,IAAIA,IAAI,EAAC;QACL,MAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAK,CAAC,CAAC,EAAC,EAAE,CAAC,CAACC,GAAG,CAChCC,UAAU,IAAK;UACZ,MAAM;YAACC,GAAG;YAAEC,WAAW;YAAEC,OAAO;YAAEC,aAAa;YAAEC,kBAAkB;YAAEC;UAAK,CAAC,GAAGN,UAAU;UACxF,OAAM;YACFO,EAAE,EAACN,GAAG;YACNO,MAAM,EAACN,WAAW;YAClBO,QAAQ,EAACN,OAAO;YAChBC,aAAa,EAACA,aAAa;YAC3BC,kBAAkB,EAACA,kBAAkB;YACrCC,KAAK,EAACA;UACV,CAAC;QACL,CAAC,CACJ;QAEDtB,QAAQ,CAACa,QAAQ,CAAC;QAClB,IAAGA,QAAQ,CAACa,MAAM,GAAG,CAAC,EAAC;UACnBtB,cAAc,CAAC,oBAAoB,CAAC;QACxC,CAAC,MACG;UACAA,cAAc,CAAC,0BAA0B,CAAC;QAC9C;MACJ,CAAC,MAAI;QACDJ,QAAQ,CAAC,EAAE,CAAC;QACZI,cAAc,CAAC,0BAA0B,CAAC;MAC9C;MACAF,UAAU,CAAC,KAAK,CAAC;IAErB,CAAC,CAAC,OAAMyB,KAAK,EAAC;MACVjB,OAAO,CAACC,GAAG,CAACgB,KAAK,CAAC;MAClBzB,UAAU,CAAC,KAAK,CAAC;IACrB;EACR,CAAC,EAAE,CAACL,UAAU,CAAC,CAAC;EAChBP,SAAS,CACL,MAAM;IACFe,UAAU,EAAE;EAChB,CAAC,EAAE,CAACR,UAAU,EAAEQ,UAAU,CAAC,CAC9B;EAED,oBACI,QAAC,UAAU,CAAC,QAAQ;IAAC,KAAK,EAAI;MAC1BJ,OAAO;MAAEF,KAAK;MAAED,aAAa;MAAEK,WAAW;MAAEC;IAChD,CAAE;IAAA,UACGR;EAAQ;IAAA;IAAA;IAAA;EAAA,QACS;AAE9B,CAAC;AAAA,GA3DKD,WAAW;AAAA,KAAXA,WAAW;AA6DjB,OAAO,MAAMiC,gBAAgB,GAAG,MAAM;EAAA;EAClC,OAAOvC,UAAU,CAACI,UAAU,CAAC;AACjC,CAAC;AAAA,IAFYmC,gBAAgB;AAI7B,SAAQnC,UAAU,EAAEE,WAAW;AAAE;AAAA"},"metadata":{},"sourceType":"module"}